import random
import tkinter as tk
from tkinter import messagebox

class Account:
    def __init__(self, name, pin):
        self.name = name
        self.pin = pin
        self.account_number = random.randint(100000, 999999)
        self.balance = 0
        
    def check_balance(self):
        return self.balance
    
    def deposit(self, amount):
        self.balance += amount
    
    def withdraw(self, amount):
        if amount <= self.balance:
            self.balance -= amount
        else:
            print("Insufficient balance")
    
    def edit_pin(self, new_pin):
        self.pin = new_pin
        
    def edit_name(self, new_name):
        self.name = new_name

class Bank:
    def __init__(self):
        self.accounts = {}
        
    def create_account(self, name, pin):
        account = Account(name, pin)
        self.accounts[account.account_number] = account
        return account.account_number
    
    def close_account(self, account_number):
        del self.accounts[account_number]
    
    def get_account(self, account_number, pin):
        if account_number in self.accounts:
            account = self.accounts[account_number]
            if account.pin == pin:
                return account
        return None
    
bank = Bank()

def create_account():
    name = name_entry.get()
    pin = pin_entry.get()
    account_number = bank.create_account(name, pin)
    output_label.config(text=f"Account created with account number {account_number}")

def login():
    account_number = account_entry.get()
    pin = pin_entry.get()
    account = bank.get_account(account_number, pin)
    if account:
        output_label.config(text="Login successful")
        login_frame.pack_forget()
        account_frame.pack()
        global current_account
        current_account = account
        account_name_label.config(text=f"Account name: {current_account.name}")
        account_balance_label.config(text=f"Account balance: {current_account.check_balance()}")
    else:
        output_label.config(text="Invalid account number or PIN")

def check_balance():
    balance = current_account.check_balance()
    account_balance_label.config(text=f"Account balance: {balance}")

def deposit():
    amount = int(deposit_entry.get())
    current_account.deposit(amount)
    account_balance_label.config(text=f"Account balance: {current_account.check_balance()}")

def withdraw():
    amount = int(withdraw_entry.get())
    current_account.withdraw(amount)
    account_balance_label.config(text=f"Account balance: {current_account.check_balance()}")

def edit_pin():
    new_pin = pin_entry.get()
    current_account.edit_pin(new_pin)
    output_label.config(text="PIN changed successfully")

def edit_name():
    new_name = name_entry.get()
    current_account.edit_name(new_name)
    output_label.config(text="Name changed successfully")

def close_account():
    bank.close_account(current_account.account_number)
    output_label.config(text="Account closed")
    account_frame.pack_forget()
    login_frame.pack()

def logout():
    messagebox.showinfo("Logged out", "You have been logged out.")
    account_frame.pack_forget()
    login_frame.pack()

# Create GUI elements
root = tk.Tk()
root.title("Banking App")

login_frame = tk.Frame(root)
login_frame.pack()

name_label = tk.Label(login_frame, text="Name:")
name_label.grid(row=0, column=0)

name_entry = tk.Entry(login_frame)
name_entry.grid(row=0, column=1)

pin_label = tk.Label(login_frame, text="PIN:")
pin_label.grid(row=1, column=0)

pin_entry = tk.Entry(login_frame, show="*")
pin_entry.grid(row=1, column=1)

create_account_button = tk.Button(login_frame, text="Create account", command=create_account)
create_account_button.grid(row=2, column=0)

login_button = tk.Button(login_frame, text="Login", command=login)
login_button.grid(row=2, column=1)

# Account frame
account_frame = tk.Frame(root)

balance_label = tk.Label(account_frame, text="Balance: $0")
balance_label.grid(row=0, column=0)

deposit_label = tk.Label(account_frame, text="Deposit:")
deposit_label.grid(row=1, column=0)

deposit_entry = tk.Entry(account_frame)
deposit_entry.grid(row=1, column=1)

deposit_button = tk.Button(account_frame, text="Deposit", command=deposit)
deposit_button.grid(row=1, column=2)

withdraw_label = tk.Label(account_frame, text="Withdraw:")
withdraw_label.grid(row=2, column=0)

withdraw_entry = tk.Entry(account_frame)
withdraw_entry.grid(row=2, column=1)

withdraw_button = tk.Button(account_frame, text="Withdraw", command=withdraw)
withdraw_button.grid(row=2, column=2)

check_balance_button = tk.Button(account_frame, text="Check balance", command=check_balance)
check_balance_button.grid(row=3, column=0)

edit_name_label = tk.Label(account_frame, text="Edit name:")
edit_name_label.grid(row=4, column=0)

edit_name_entry = tk.Entry(account_frame)
edit_name_entry.grid(row=4, column=1)

edit_name_button = tk.Button(account_frame, text="Edit name", command=edit_name)
edit_name_button.grid(row=4, column=2)

logout_button = tk.Button(account_frame, text="Logout", command=logout)
logout_button.grid(row=5, column=1)

output_label = tk.Label(account_frame, text="")
output_label.grid(row=6, column=0, columnspan=3)

root.mainloop()
